// Generated by CoffeeScript 1.6.3
var log,
  __slice = [].slice,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

log = function() {
  var args;
  args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
  if (typeof console !== "undefined" && console !== null) {
    console.log.apply(console, args);
  }
  return args[0];
};

(function($) {
  var App, Delegator, Entries;
  App = (function() {
    function App() {
      var _this = this;
      this.loading = false;
      this.POSTS_PER_PAGE = 2;
      this.JSON_URL = "http://api.usergrid.com/meriiken/instashion/movies";
      this.page = 0;
      this.options = this.getOptions();
      this.el = this.getEl();
      this.setPlugin();
      this.entries = new Entries(this);
      this.el.window.on("jsonLoaded", function() {
        _this.delegator = new Delegator(_this);
        _this.delegator.on();
        return _this.el.window.trigger("bottom");
      });
    }

    App.prototype.getOptions = function() {
      return {
        hello: "world"
      };
    };

    App.prototype.setPlugin = function() {
      return this.el.window.bottom();
    };

    App.prototype.getEl = function() {
      return {
        window: $(window),
        document: $(document),
        hoge: $(".hoge"),
        container: $("#postContainer")
      };
    };

    return App;

  })();
  Delegator = (function() {
    function Delegator(app) {
      this.app = app;
      this.tagSelect = __bind(this.tagSelect, this);
      this.loadContents = __bind(this.loadContents, this);
    }

    Delegator.prototype.on = function() {
      this.app.el.window.on("bottom", this.loadContents);
      return this.app.el.document.on("click", ".tag", this.tagSelect);
    };

    Delegator.prototype.loadContents = function() {
      return this.app.entries.getEntries();
    };

    Delegator.prototype.tagSelect = function() {
      return this.app.entries.reset();
    };

    return Delegator;

  })();
  Entries = (function() {
    function Entries(app, entries) {
      var _this = this;
      this.app = app;
      this.entries = entries;
      this.parseYouTubeID = __bind(this.parseYouTubeID, this);
      this.render = __bind(this.render, this);
      this.getEntries = __bind(this.getEntries, this);
      this.reset = __bind(this.reset, this);
      this.page = 0;
      this.lock === false;
      this.jsondata;
      $.getJSON(this.app.JSON_URL).done(function(data) {
        _this.jsondata = data;
        _this.entries = data.entities;
        return _this.app.el.window.trigger("jsonLoaded");
      });
    }

    Entries.prototype.reset = function() {
      this.app.el.container.html("");
      this.page = 0;
      return $(window).scrollTop(0);
    };

    Entries.prototype.getEntries = function() {
      log(this.entries);
      this.render(this.entries.slice(this.page * this.app.POSTS_PER_PAGE, (this.page + 1) * this.app.POSTS_PER_PAGE));
      return this.page = this.page + 1;
    };

    Entries.prototype.render = function(entries) {
      var items,
        _this = this;
      items = [];
      $.each(entries, function(key, val) {
        var ins_imgs, instagram, photo, ytID, _i, _len, _ref;
        ytID = _this.parseYouTubeID(val.url);
        ins_imgs = val.instagram_images;
        instagram = "";
        _ref = val.instagram_images;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          photo = _ref[_i];
          instagram += "<div class=\"col-lg-4 col-xs-6\">\n    <h2>Heading</h2>\n    <p><a href=\"" + photo.url + "\"><img src=\"" + photo.img + "\" width=\"100\" height=\"100\"></a></p>\n</div>";
        }
        return items.push("<div class=\"col-6 col-sm-6 col-sm-6-height col-lg-4 col-xs-6\">\n    <h2>" + val.title + "</h2>\n    <div class=\"row entry\">\n        <p class=\"frame_youtube\">\n            <a href=\"https://youtube.googleapis.com/v/" + ytID + "?rel=0\" class=\"youtube-movie\"><img src=\"http://img.youtube.com/vi/" + ytID + "/mqdefault.jpg\" alt=\"\"></a>\n        </p>\n        <p>\n            <a class=\"btn btn-primary\" href=\"#\">View details â‰«</a>\n        </p>\n\n        <div class=\"row\">\n        " + instagram + "\n\n        </div>\n    </div>\n</div>");
      });
      return this.app.el.container.append(items.join(""));
    };

    Entries.prototype.parseYouTubeID = function(url) {
      var elm, id, params;
      elm = document.createElement('a');
      elm.href = 'http://www.youtube.com/watch?v=Q16KpquGsIc&gl=JP&hl=ja#coment';
      elm.href = url;
      params = elm.search.substring(1).split('&');
      return id = params[0].substring(2);
    };

    return Entries;

  })();
  return $(function() {
    var instashion;
    return instashion = new App();
  });
})(jQuery);
